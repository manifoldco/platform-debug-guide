{"version":3,"sources":["webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/graphql-76df7e9d.js","webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/plan-de6e83a6.js","webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/manifold-cost-display.entry.js","webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/errorReport-fd9a1346.js","webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/logger-2d4b1cd8.js","webpack:///./node_modules/@manifoldco/ui/dist/esm-es5/loadMark-3d3a666d.js"],"names":["CalculationType","ChargeTime","ConfigurableFeaturesOrderByField","Currency","Duration","FixedFeaturesOrderByField","InvoiceAction","InvoiceOrderByField","InvoicePreviewOrderByField","InvoiceStatus","IsDeleted","MeteredFeaturesOrderByField","OrderByDirection","PlanFeatureType","PlanOrderByField","PlanState","ProductCredentialsSupportType","ProductOrderByField","ProductState","ProfileState","ProfileStateModifier","RegionsOrderByField","RenewalPoint","ResourceStatusLabel","$","amount","options","Intl","NumberFormat","Object","assign","style","currency","format","replace","pluralize","word","endsWith","NUMBER_FEATURE_COIN","featureCost","number","pricingTiers","numericDetails","per","unit","costTiers","length","from","to","Infinity","cost","min","cheapestNonZeroCost","reduce","total","tier","Math","ceil","map","_a","i","limit","lastTier","toLowerCase","round","meteredFeatureDisplayValue","withCommas","planCost","restFetch","planID","features","init","service","endpoint","body","method","headers","configurableFeatureDefaults","configurableFeatures","defaultFeatures","forEach","_b","node","label","type","value","Boolean","__decorate","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","BaseCost","props","isFreeMonthly","hasMeteredFeatures","compact","MeteredCost","meteredFeatures","displayValue","ManifoldCostDisplay","hostRef","this","configurable","prototype","get","baseCost","enumerable","componentWillLoad","render","class","startingAt","compositeCost","itemprop","report","detail","element","extendedDetail","componentName","tagName","npmVersion","console","error","evt","CustomEvent","bubbles","document","dispatchEvent","logger","_propertyKey","descriptor","originalMethod","rendered","apply","performanceLoadMark","performanceRenderedMark","constructor","name","startsWith","hasSkeletonElements","$tag$","$children$","includes","performance","now","component","duration","e","message","loadMark","_target"],"mappings":"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","file":"17.bd2987ab332dd8f0b232.js","sourcesContent":["/** CalculationType represents the known calculation types possible for SubLineItems. */\nvar CalculationType;\n(function (CalculationType) {\n    CalculationType[\"Prorate\"] = \"PRORATE\";\n    CalculationType[\"UsageTier\"] = \"USAGE_TIER\";\n})(CalculationType || (CalculationType = {}));\n/** ChargeTime is representation of when the charge for a cycle occurs. */\nvar ChargeTime;\n(function (ChargeTime) {\n    ChargeTime[\"PostPaid\"] = \"POST_PAID\";\n})(ChargeTime || (ChargeTime = {}));\n/** Fields by which to sort configurable features. */\nvar ConfigurableFeaturesOrderByField;\n(function (ConfigurableFeaturesOrderByField) {\n    ConfigurableFeaturesOrderByField[\"Label\"] = \"LABEL\";\n    ConfigurableFeaturesOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n})(ConfigurableFeaturesOrderByField || (ConfigurableFeaturesOrderByField = {}));\n/** Currency is the supported currency, represented as an ISO currency code. */\nvar Currency;\n(function (Currency) {\n    Currency[\"Usd\"] = \"USD\";\n})(Currency || (Currency = {}));\n/** Duration is a representation of the length a cycle. */\nvar Duration;\n(function (Duration) {\n    Duration[\"Monthly\"] = \"MONTHLY\";\n})(Duration || (Duration = {}));\n/** Fields by which to sort fixed features. */\nvar FixedFeaturesOrderByField;\n(function (FixedFeaturesOrderByField) {\n    FixedFeaturesOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n})(FixedFeaturesOrderByField || (FixedFeaturesOrderByField = {}));\n/** InvoiceAction is the mutation action to be taken on an Invoice */\nvar InvoiceAction;\n(function (InvoiceAction) {\n    InvoiceAction[\"Attempt\"] = \"ATTEMPT\";\n    InvoiceAction[\"Collected\"] = \"COLLECTED\";\n})(InvoiceAction || (InvoiceAction = {}));\n/** InvoiceOrderByField is the field by which an Invoice list will be ordered. */\nvar InvoiceOrderByField;\n(function (InvoiceOrderByField) {\n    InvoiceOrderByField[\"End\"] = \"END\";\n})(InvoiceOrderByField || (InvoiceOrderByField = {}));\n/** InvoicePreviewOrderByField is the field by which an Invoice preview list will be ordered. */\nvar InvoicePreviewOrderByField;\n(function (InvoicePreviewOrderByField) {\n    InvoicePreviewOrderByField[\"CreatedAt\"] = \"CREATED_AT\";\n})(InvoicePreviewOrderByField || (InvoicePreviewOrderByField = {}));\n/** InvoiceStatus represents the current status of an Invoice */\nvar InvoiceStatus;\n(function (InvoiceStatus) {\n    InvoiceStatus[\"Preview\"] = \"PREVIEW\";\n    InvoiceStatus[\"Pending\"] = \"PENDING\";\n    InvoiceStatus[\"Paid\"] = \"PAID\";\n})(InvoiceStatus || (InvoiceStatus = {}));\n/**\n * IsDeleted is an enum indicating whether a query should search for deleted records.\n * When value is MAYBE, query searches both deleted and non-deleted records\n **/\nvar IsDeleted;\n(function (IsDeleted) {\n    IsDeleted[\"False\"] = \"FALSE\";\n    IsDeleted[\"True\"] = \"TRUE\";\n    IsDeleted[\"Maybe\"] = \"MAYBE\";\n})(IsDeleted || (IsDeleted = {}));\n/** Fields by which to sort metered features. */\nvar MeteredFeaturesOrderByField;\n(function (MeteredFeaturesOrderByField) {\n    MeteredFeaturesOrderByField[\"Label\"] = \"LABEL\";\n    MeteredFeaturesOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n})(MeteredFeaturesOrderByField || (MeteredFeaturesOrderByField = {}));\n/** The direction used to order results. */\nvar OrderByDirection;\n(function (OrderByDirection) {\n    OrderByDirection[\"Asc\"] = \"ASC\";\n    OrderByDirection[\"Desc\"] = \"DESC\";\n})(OrderByDirection || (OrderByDirection = {}));\n/** PlanFeatureType is an enumeration of different types of plans. */\nvar PlanFeatureType;\n(function (PlanFeatureType) {\n    PlanFeatureType[\"Boolean\"] = \"BOOLEAN\";\n    PlanFeatureType[\"String\"] = \"STRING\";\n    PlanFeatureType[\"Number\"] = \"NUMBER\";\n})(PlanFeatureType || (PlanFeatureType = {}));\n/** PlanOrderByField is the field by which a plan list will be ordered. */\nvar PlanOrderByField;\n(function (PlanOrderByField) {\n    PlanOrderByField[\"Label\"] = \"LABEL\";\n    PlanOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n    PlanOrderByField[\"Cost\"] = \"COST\";\n})(PlanOrderByField || (PlanOrderByField = {}));\n/** PlanState is an enumeration of possible plan states. */\nvar PlanState;\n(function (PlanState) {\n    PlanState[\"Hidden\"] = \"HIDDEN\";\n    PlanState[\"Available\"] = \"AVAILABLE\";\n    PlanState[\"Grandfathered\"] = \"GRANDFATHERED\";\n    PlanState[\"Unlisted\"] = \"UNLISTED\";\n})(PlanState || (PlanState = {}));\n/**\n * ProductCredentialsSupportType describes product credentials support.\n *\n * * `NONE`: means that no credentials are necessary to access the product.\n *     This can happen for products that are only usable through their dashboard.\n * * `SINGLE`: means that the product only supports one credential set at a single time.\n * * `MULTIPLE`: means that the product supports multiple credential sets at a single time.\n **/\nvar ProductCredentialsSupportType;\n(function (ProductCredentialsSupportType) {\n    ProductCredentialsSupportType[\"None\"] = \"NONE\";\n    ProductCredentialsSupportType[\"Single\"] = \"SINGLE\";\n    ProductCredentialsSupportType[\"Multiple\"] = \"MULTIPLE\";\n})(ProductCredentialsSupportType || (ProductCredentialsSupportType = {}));\n/** ProductOrderByField is the field by which the product list will be ordered. */\nvar ProductOrderByField;\n(function (ProductOrderByField) {\n    ProductOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n})(ProductOrderByField || (ProductOrderByField = {}));\n/** ProductState is an enum of possible product states. */\nvar ProductState;\n(function (ProductState) {\n    ProductState[\"Available\"] = \"AVAILABLE\";\n    ProductState[\"Hidden\"] = \"HIDDEN\";\n    ProductState[\"Grandfathered\"] = \"GRANDFATHERED\";\n    ProductState[\"New\"] = \"NEW\";\n    ProductState[\"Upcoming\"] = \"UPCOMING\";\n})(ProductState || (ProductState = {}));\n/**\n * ProfileState is the current state the profile is in. Based on this state,\n * Manifold determines if a profile can take certain actions or not.\n **/\nvar ProfileState;\n(function (ProfileState) {\n    ProfileState[\"Active\"] = \"ACTIVE\";\n    ProfileState[\"Suspended\"] = \"SUSPENDED\";\n    ProfileState[\"Deleted\"] = \"DELETED\";\n})(ProfileState || (ProfileState = {}));\n/** ProfileStateModifier represents the possible modifiers of the Profile's state. */\nvar ProfileStateModifier;\n(function (ProfileStateModifier) {\n    ProfileStateModifier[\"Manifold\"] = \"MANIFOLD\";\n    ProfileStateModifier[\"Platform\"] = \"PLATFORM\";\n})(ProfileStateModifier || (ProfileStateModifier = {}));\n/** RegionsOrderByField is an enum of fields by which regions will be ordered. */\nvar RegionsOrderByField;\n(function (RegionsOrderByField) {\n    RegionsOrderByField[\"DisplayName\"] = \"DISPLAY_NAME\";\n    RegionsOrderByField[\"Platform\"] = \"PLATFORM\";\n    RegionsOrderByField[\"DataCenter\"] = \"DATA_CENTER\";\n})(RegionsOrderByField || (RegionsOrderByField = {}));\n/** RenewalPoint is a representation of when the cycle renewal occurs. */\nvar RenewalPoint;\n(function (RenewalPoint) {\n    RenewalPoint[\"Calendar\"] = \"CALENDAR\";\n})(RenewalPoint || (RenewalPoint = {}));\n/** ResourceStatusLabel is an enum representing the possible status a resource can have. */\nvar ResourceStatusLabel;\n(function (ResourceStatusLabel) {\n    ResourceStatusLabel[\"Available\"] = \"AVAILABLE\";\n    ResourceStatusLabel[\"Creating\"] = \"CREATING\";\n    ResourceStatusLabel[\"Updating\"] = \"UPDATING\";\n    ResourceStatusLabel[\"Deleting\"] = \"DELETING\";\n    ResourceStatusLabel[\"Deleted\"] = \"DELETED\";\n    ResourceStatusLabel[\"ErrorCreating\"] = \"ERROR_CREATING\";\n    ResourceStatusLabel[\"ErrorUpdating\"] = \"ERROR_UPDATING\";\n    ResourceStatusLabel[\"ErrorDeleting\"] = \"ERROR_DELETING\";\n})(ResourceStatusLabel || (ResourceStatusLabel = {}));\nexport { ProductCredentialsSupportType as P, ResourceStatusLabel as R, ProductState as a, PlanState as b, PlanFeatureType as c };\n","import { c as PlanFeatureType } from './graphql-76df7e9d.js';\n/**\n * Display cents as a dollar value\n */\nvar $ = function (amount, options) {\n    if (options === void 0) { options = {}; }\n    return Intl.NumberFormat('en-US', Object.assign({ style: 'currency', currency: 'USD' }, options))\n        .format(amount / 100)\n        .replace(/\\.00$/, '');\n};\nvar pluralize = function (word) {\n    if (word.endsWith('s')) {\n        return word + \"es\";\n    }\n    if (word.endsWith('y')) {\n        return word.replace(/y$/, '') + \"ies\";\n    }\n    return word + \"s\";\n};\n// numeric details constants\nvar NUMBER_FEATURE_COIN = 10000000; // Numeric features are a ten-millionth of a cent, because floats stink\n/**\n * Convert number feature costs to float cents (NOT DOLLARS)\n */\nfunction featureCost(number) {\n    return number / NUMBER_FEATURE_COIN;\n}\n/**\n * For really, really, really cheap features that would normally display something awful like\n * “$0.000002345 / unit”, this figures out a sane number to display something like “$0.02 per 4,000 units”.\n */\nfunction oneCent(number) {\n    var min = Math.ceil(NUMBER_FEATURE_COIN / number);\n    // If sorta tiny round to nearest thousand\n    if (min < 1000) {\n        return Math.ceil(min / 1000) * 1000;\n    }\n    // Otherwise, round to nearest hundred\n    return Math.ceil(min / 100) * 100;\n}\n/**\n * Calculate pricing tiers for metered features\n */\nfunction pricingTiers(numericDetails) {\n    // Features can be really, really (really) cheap. Let’s make things easier.\n    var per = 1;\n    var unit = numericDetails.unit || '';\n    // if no cost tiers, return free tier\n    if (!numericDetails.costTiers || !numericDetails.costTiers.length) {\n        return [{ from: 0, to: Infinity, cost: 0, unit: unit, per: per }];\n    }\n    var cheapestNonZeroCost = numericDetails.costTiers.reduce(function (total, tier) {\n        if (!tier.cost || tier.cost === 0) {\n            return total;\n        }\n        return tier.cost < total ? tier.cost : total;\n    }, Infinity);\n    if (cheapestNonZeroCost < NUMBER_FEATURE_COIN) {\n        per = oneCent(cheapestNonZeroCost);\n    }\n    return numericDetails.costTiers.map(function (_a, i) {\n        var cost = _a.cost, limit = _a.limit;\n        // Each tier starts at previous + 1 (not other way around)\n        var from = 0;\n        var lastTier = numericDetails.costTiers && numericDetails.costTiers[i - 1];\n        if (lastTier && typeof lastTier.limit === 'number') {\n            from = lastTier.limit + 1;\n        }\n        // Use Infinity rather than -1\n        var to = typeof limit === 'number' ? limit : Infinity;\n        if (to === -1) {\n            to = Infinity;\n        }\n        // Special case: convert seconds for users\n        if (unit.toLowerCase() === 'seconds') {\n            var hours = 60 * 60;\n            return {\n                cost: (cost || 0) * hours,\n                from: Math.round(from / hours),\n                to: to === Infinity ? Infinity : Math.round(to / hours),\n                unit: 'hour',\n                per: 1,\n            };\n        }\n        return {\n            cost: cost,\n            from: from,\n            to: to,\n            unit: unit,\n            per: per,\n        };\n    });\n}\n/**\n * User-friendly display for a measurable number feature value\n */\nfunction meteredFeatureDisplayValue(numericDetails) {\n    var withCommas = new Intl.NumberFormat().format;\n    var tiers = pricingTiers(numericDetails);\n    // Flat cost\n    var _a = tiers[0], cost = _a.cost, unit = _a.unit, per = _a.per;\n    if (cost === 0) {\n        return { cost: 'Free' };\n    }\n    // If features are really really cheap, let’s make it more readable\n    if (per > 1) {\n        return { cost: $(featureCost(cost * per)), per: \"per\\u00A0\" + withCommas(per) + \" \" + pluralize(unit) };\n    }\n    return { cost: $(featureCost(cost)), per: \"/\\u00A0\" + unit };\n}\n/**\n * Fetch cost from our API\n */\nfunction planCost(restFetch, _a) {\n    var planID = _a.planID, features = _a.features, init = _a.init;\n    return restFetch({\n        service: 'gateway',\n        endpoint: \"/id/plan/\" + planID + \"/cost\",\n        body: { features: features },\n        options: Object.assign({ method: 'POST', headers: { 'Content-Type': 'application/json' } }, init),\n    });\n}\n/**\n * Get default feature map for configurableFeatures\n */\nfunction configurableFeatureDefaults(configurableFeatures) {\n    var defaultFeatures = {};\n    configurableFeatures.forEach(function (_a) {\n        var _b = _a.node, label = _b.label, numericDetails = _b.numericDetails, options = _b.options, type = _b.type;\n        // if number feature\n        if (numericDetails) {\n            defaultFeatures[label] = numericDetails.min;\n        }\n        else if (options && options[0]) {\n            var value = options[0].label;\n            if (type === PlanFeatureType.Boolean) {\n                defaultFeatures[label] = value === 'true';\n            }\n            else {\n                defaultFeatures[label] = value;\n            }\n        }\n    });\n    return defaultFeatures;\n}\nexport { $, pricingTiers as a, pluralize as b, configurableFeatureDefaults as c, featureCost as f, meteredFeatureDisplayValue as m, planCost as p };\n","import { r as registerInstance, h, g as getElement } from './core-1b19af26.js';\nimport './errorReport-fd9a1346.js';\nimport { l as logger } from './logger-2d4b1cd8.js';\nimport { l as loadMark } from './loadMark-3d3a666d.js';\nimport './graphql-76df7e9d.js';\nimport { $, m as meteredFeatureDisplayValue } from './plan-de6e83a6.js';\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar BaseCost = function (props) {\n    var cost = props.cost, isFreeMonthly = props.isFreeMonthly, hasMeteredFeatures = props.hasMeteredFeatures, compact = props.compact;\n    if (typeof cost !== 'number') {\n        return null;\n    }\n    // If there are measurable costs but no monthly cost, only show measurable\n    if (isFreeMonthly && hasMeteredFeatures) {\n        return null;\n    }\n    if (isFreeMonthly) {\n        // Show the badge for compact, large text otherwise\n        return compact ? h(\"manifold-badge\", { \"data-tag\": \"free\" }, \"Free\") : 'Free';\n    }\n    // $5 / mo\n    return compact ? $(cost) : [$(cost), h(\"small\", null, \"\\u00A0/\\u00A0mo\")];\n};\nvar MeteredCost = function (_a) {\n    var meteredFeatures = _a.meteredFeatures;\n    if (meteredFeatures.length === 0) {\n        return null;\n    }\n    if (meteredFeatures.length > 1) {\n        return h(\"small\", null, \"metered usage\");\n    }\n    var displayValue = meteredFeatureDisplayValue(meteredFeatures[0].node.numericDetails);\n    return [displayValue.cost, displayValue.per ? h(\"small\", null, \"\\u00A0\", displayValue.per) : ''];\n};\nvar ManifoldCostDisplay = /** @class */ (function () {\n    function ManifoldCostDisplay(hostRef) {\n        registerInstance(this, hostRef);\n        this.compact = false;\n        this.meteredFeatures = [];\n        this.configurable = false;\n    }\n    Object.defineProperty(ManifoldCostDisplay.prototype, \"isFreeMonthly\", {\n        get: function () {\n            return this.baseCost === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ManifoldCostDisplay.prototype, \"hasMeteredFeatures\", {\n        get: function () {\n            return this.meteredFeatures.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ManifoldCostDisplay.prototype.componentWillLoad = function () { };\n    ManifoldCostDisplay.prototype.render = function () {\n        if (typeof this.baseCost !== 'number') {\n            return h(\"div\", { class: \"cost\" });\n        }\n        // Show “starting at” if customizable\n        var startingAt = this.compact && this.configurable;\n        // Show plus sign if metered features\n        var compositeCost = !this.isFreeMonthly && this.hasMeteredFeatures;\n        return (h(\"div\", { class: \"cost\", \"data-compact\": this.compact }, h(\"span\", { itemprop: \"price\" }, startingAt && h(\"span\", { class: \"starting\" }, \"Starting at\"), h(BaseCost, { compact: this.compact, cost: this.baseCost, isFreeMonthly: this.isFreeMonthly, hasMeteredFeatures: this.hasMeteredFeatures }), compositeCost && ' + ', h(MeteredCost, { meteredFeatures: this.meteredFeatures }))));\n    };\n    Object.defineProperty(ManifoldCostDisplay.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ManifoldCostDisplay, \"style\", {\n        get: function () { return \".cost{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:1.25em;color:inherit}.cost small{font-size:var(--manifold-font-d1);opacity:.6}.starting{margin-right:.25em}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return ManifoldCostDisplay;\n}());\n__decorate([\n    loadMark()\n], ManifoldCostDisplay.prototype, \"componentWillLoad\", null);\n__decorate([\n    logger()\n], ManifoldCostDisplay.prototype, \"render\", null);\nexport { ManifoldCostDisplay as manifold_cost_display };\n","/* eslint-disable somethnig */\nfunction report(detail, element) {\n    var extendedDetail = Object.assign(Object.assign(Object.assign({}, detail), (element ? { componentName: element.tagName } : {})), { npmVersion: '0.6.4' });\n    console.error(detail); // report error (Rollbar, Datadog, etc.)\n    var evt = new CustomEvent('manifold-error', { bubbles: true, detail: extendedDetail });\n    (element || document).dispatchEvent(evt);\n}\nexport { report as r };\n","import { h } from './core-1b19af26.js';\nimport { r as report } from './errorReport-fd9a1346.js';\nfunction hasSkeletonElements(rendered) {\n    if (rendered &&\n        rendered.$tag$ &&\n        rendered.$tag$.startsWith &&\n        rendered.$tag$.startsWith('manifold-skeleton-')) {\n        return true;\n    }\n    if (rendered && rendered.$children$) {\n        return rendered.$children$.map(function (c) { return hasSkeletonElements(c); }).includes(true);\n    }\n    return false;\n}\n/* eslint-disable no-param-reassign */\nfunction logger() {\n    return function loggerDecorator(target, _propertyKey, descriptor) {\n        var originalMethod = descriptor.value;\n        descriptor.value = function render() {\n            try {\n                var rendered = originalMethod.apply(this); // attempt to call render()\n                if (this.performanceLoadMark &&\n                    !this.performanceRenderedMark &&\n                    target.constructor.name.startsWith('Manifold') &&\n                    !hasSkeletonElements(rendered)) {\n                    this.performanceRenderedMark = performance.now();\n                    var evt = new CustomEvent('manifold-time-to-render', {\n                        bubbles: true,\n                        detail: {\n                            component: target.constructor.name,\n                            duration: this.performanceRenderedMark - this.performanceLoadMark,\n                        },\n                    });\n                    document.dispatchEvent(evt);\n                }\n                return rendered;\n            }\n            catch (e) {\n                var detail = {\n                    componentName: target.constructor.name,\n                    error: e.message,\n                    npmVersion: '0.6.4',\n                };\n                report(detail);\n                return h(\"manifold-toast\", { \"alert-type\": \"error\" }, e.message); // show error to user\n            }\n        };\n        return descriptor;\n    };\n}\nexport { logger as l };\n","/* eslint-disable no-param-reassign */\nfunction loadMark() {\n    return function loadMarkDecorator(_target, _propertyKey, descriptor) {\n        var originalMethod = descriptor.value;\n        descriptor.value = function componentWillLoad() {\n            this.performanceLoadMark = performance.now();\n            return originalMethod.apply(this); // call original method\n        };\n        return descriptor;\n    };\n}\nexport { loadMark as l };\n"],"sourceRoot":""}